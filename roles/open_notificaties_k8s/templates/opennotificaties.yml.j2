---

kind: Deployment
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: django
    app.kubernetes.io/instance: "{{ opennotificaties_instance }}"
    app.kubernetes.io/version: "{{ opennotificaties_version }}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: open-notificaties
    app.kubernetes.io/managed-by: Ansible
spec:
  replicas: {{ opennotificaties_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: django
      app.kubernetes.io/instance: "{{ opennotificaties_instance }}"
      app.kubernetes.io/part-of: open-notificaties
  template:
    metadata:
      name: opennotificaties
      labels:
        app.kubernetes.io/name: django
        app.kubernetes.io/instance: "{{ opennotificaties_instance }}"
        app.kubernetes.io/version: "{{ opennotificaties_version }}"
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: open-notificaties
        app.kubernetes.io/managed-by: Ansible
    spec:
      containers:
      - name: opennotificaties
        image: {{ opennotificaties_image }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "500Mi"
            cpu: "100m"
          limits: {{ opennotificaties_resource_limits }}

        readinessProbe:
          httpGet:
            path: /
            port: 8000
            httpHeaders:
              - name: Host
                value: localhost
          initialDelaySeconds: 30
          periodSeconds: 30

        livenessProbe:
          httpGet:
            path: /
            port: 8000
            httpHeaders:
              - name: Host
                value: localhost
          initialDelaySeconds: 30
          periodSeconds: 30

        env:
          # General Django settings
          - name: DJANGO_SETTINGS_MODULE
            value: nrc.conf.docker
          - name: ALLOWED_HOSTS
            value: "localhost,opennotificaties.{{ opennotificaties_namespace }},{{ opennotificaties_domain }}"
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: opennotificaties-secrets
                key: SECRET_KEY

          # Database settings
          - name: DB_HOST
            value: "{{ opennotificaties_db_host }}"
          - name: DB_NAME
            value: "{{ opennotificaties_db_name }}"
          - name: DB_PORT
            value: "{{ opennotificaties_db_port }}"
          - name: DB_USER
            value: "{{ opennotificaties_db_username }}"
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: opennotificaties-secrets
                key: DB_PASSWORD

          # RabbitMQ
          - name: PUBLISH_BROKER_URL
            valueFrom:
              secretKeyRef:
                name: opennotificaties-secrets
                key: PUBLISH_BROKER_URL
          - name: CELERY_BROKER_URL
            valueFrom:
              secretKeyRef:
                name: opennotificaties-secrets
                key: CELERY_BROKER_URL
          - name: CELERY_RESULT_BACKEND
            valueFrom:
              secretKeyRef:
                name: opennotificaties-secrets
                key: CELERY_RESULT_BACKEND

          # Caches
          - name: CACHE_DEFAULT
            value: "cache:6379/{{ opennotificaties_cache_db }}"
          - name: CACHE_AXES
            value: "cache:6379/{{ opennotificaties_cache_db }}"

{% if opennotificaties_sentry_dsn %}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: opennotificaties-secrets
                key: SENTRY_DSN
{% endif %}


