upstream openzaak {
    {% for replica in openzaak_replicas %}
        server 127.0.0.1:{{ replica.port }};
    {% endfor %}
}

{% if openzaak_ssl %}
server {
    server_tokens off;
    listen 80;
    server_name {{ openzaak_domain }} default_server;
    rewrite ^ https://{{ openzaak_domain }}$request_uri?;
}
{% endif %}

server {
    server_tokens off;
    listen {% if openzaak_ssl %}443 ssl{% else %}80{% endif %};
    server_name {{ openzaak_domain }};
    client_max_body_size 4G;

    # Enable Gzip, from html5-boilerplate-server-configs
    gzip  on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_min_length 1100;
    gzip_buffers     4 8k;
    gzip_proxied any;
    gzip_types

      # text/html is always compressed by HttpGzipModule
      text/css
      text/javascript
      text/xml
      text/plain
      text/x-component
      application/javascript
      application/json
      application/xml
      application/rss+xml
      font/truetype
      font/opentype
      application/vnd.ms-fontobject
      image/svg+xml;

    gzip_static on;

    gzip_proxied        expired no-cache no-store private auth;
    gzip_disable        "MSIE [1-6]\.";
    gzip_vary           on;

    {% if openzaak_ssl %}

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Disable SSLv3 for security reasons
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS';

    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    add_header Strict-Transport-Security max-age=15768000;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

    ssl on;

    # Note: If using a certificate bundle ensure that the _first_ certificate
    # in the bundle corresponds with the private key.

    ssl_certificate /etc/letsencrypt/live/{{ openzaak_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ openzaak_domain }}/privkey.pem;

    {% endif %}

    location / {
        proxy_pass_header Server;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Scheme $scheme;
        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;

        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass_request_headers on;
        proxy_pass http://openzaak;
    }

    location /private-media {
        internal;
        alias {{ openzaak_volume_path | mandatory }};
    }

    error_page  404              /404.html;
    error_page  413              /413.json;
    error_page  500 502 503 504  /500.json;
}
